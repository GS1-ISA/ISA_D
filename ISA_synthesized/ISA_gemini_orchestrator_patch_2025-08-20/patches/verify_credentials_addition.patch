*** a/scripts/verify_credentials.py
--- b/scripts/verify_credentials.py
***************
*** 0 ****
--- 1,39 ----
+ import os, sys
+ 
+ REQUIRED = [
+     # LLM
+     "OPENROUTER_API_KEY",  # or OPENAI_API_KEY
+     # Auth
+     "ISA_AUTH_SECRET",
+     # Optional backends (if used, enforce via project config)
+     # "NEO4J_URI", "NEO4J_USERNAME", "NEO4J_PASSWORD",
+     # "SUPABASE_URL", "SUPABASE_ANON_KEY",
+ ]
+ 
+ def redacted(v: str) -> str:
+     return v if not v else (v[:4] + "â€¦" + v[-4:])
+ 
+ def main():
+     missing = []
+     present = {}
+     for key in REQUIRED:
+         val = os.getenv(key)
+         if not val:
+             missing.append(key)
+         else:
+             present[key] = redacted(val)
+     # Accept OPENAI_API_KEY as alternative to OPENROUTER_API_KEY
+     if "OPENROUTER_API_KEY" in missing and os.getenv("OPENAI_API_KEY"):
+         missing.remove("OPENROUTER_API_KEY")
+         present["OPENAI_API_KEY"] = redacted(os.getenv("OPENAI_API_KEY"))
+ 
+     print("Environment verification:")
+     for k, v in present.items():
+         print(f"  {k} = {v}")
+     if missing:
+         print("\nMissing required variables:\n  - " + "\n  - ".join(missing))
+         return 1
+     return 0
+ 
+ if __name__ == "__main__":
+     sys.exit(main())
